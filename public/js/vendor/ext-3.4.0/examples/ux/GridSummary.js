Ext.ns('Ext.ux.grid');Ext.ux.grid.GridSummary=Ext.extend(Ext.util.Observable,{scrollBarWidth:17,constructor:function(config){Ext.apply(this,config);Ext.ux.grid.GridSummary.superclass.constructor.call(this);},init:function(grid){this.grid=grid;var v=this.view=grid.getView();v.onLayout=this.onLayout;if(Ext.isIE6||Ext.isIE7){if(!grid.events['viewready']){v.afterMethod('afterRender',function(){this.grid.fireEvent('viewready',this.grid);},this);}
grid.on('viewready',function(){this.toggleGridHScroll(false);},this,{delay:10});}else{v.afterMethod('render',this.toggleGridHScroll,this);}
v.afterMethod('render',this.refreshSummary,this);v.afterMethod('refresh',this.refreshSummary,this);v.afterMethod('onColumnWidthUpdated',this.doWidth,this);v.afterMethod('onAllColumnWidthsUpdated',this.doAllWidths,this);v.afterMethod('onColumnHiddenUpdated',this.doHidden,this);if(Ext.isGecko||Ext.isOpera){v.afterMethod('onDataChange',this.restoreGridHScroll,this);}
grid.on({bodyscroll:this.syncSummaryScroll,beforedestroy:this.beforeDestroy,scope:this});grid.store.on({add:this.refreshSummary,remove:this.refreshSummary,clear:this.refreshSummary,update:this.refreshSummary,scope:this});if(!this.rowTpl){this.rowTpl=new Ext.Template('<div class="x-grid3-summary-row x-grid3-gridsummary-row-offset">','<table class="x-grid3-summary-table" border="0" cellspacing="0" cellpadding="0" style="{tstyle}">','<tbody><tr>{cells}</tr></tbody>','</table>','</div>');this.rowTpl.disableFormats=true;}
this.rowTpl.compile();if(!this.cellTpl){this.cellTpl=new Ext.Template('<td class="x-grid3-col x-grid3-cell x-grid3-td-{id} {css}" style="{style}">','<div class="x-grid3-cell-inner x-grid3-col-{id}" unselectable="on" {attr}>{value}</div>',"</td>");this.cellTpl.disableFormats=true;}
this.cellTpl.compile();},calculate:function(rs,cm){var data={},r,cfg=cm.config,cf,i,len,cname,j,jlen;for(i=0,len=cfg.length;i<len;i++){cf=cfg[i];cname=cf.dataIndex;data[cname]=0;if(cf.summaryType){for(j=0,jlen=rs.length;j<jlen;j++){r=rs[j];data[cname]=Ext.ux.grid.GridSummary.Calculations[cf.summaryType](r.get(cname),r,cname,data,j);}}}
return data;},onLayout:function(vw,vh){if(typeof(vh)!='number'){return;}
if(!this.grid.getGridEl().hasClass('x-grid-hide-gridsummary')){this.scroller.setHeight(vh-this.summaryWrap.getHeight());}},syncScroll:function(refEl,scrollEl,currX,currY){currX=currX||refEl.scrollLeft;currY=currY||refEl.scrollTop;if(this.oldX!=currX){scrollEl.scrollLeft=currX;scrollEl.scrollLeft=currX;}
this.oldX=currX;this.oldY=currY;},syncSummaryScroll:function(currX,currY){var v=this.view,y=this.oldY;if(Ext.isGecko&&currX===0&&this.oldX>0&&(y!==currY||y===0)){this.restoreGridHScroll();}else{this.syncScroll(v.scroller.dom,v.summaryWrap.dom,currX,currY);}},restoreGridHScroll:function(){this.view.scroller.dom.scrollLeft=this.oldX||0;},syncGridHScroll:function(){var v=this.view;this.syncScroll(v.summaryWrap.dom,v.scroller.dom);},doWidth:function(col,w,tw){var s=this.getSummaryNode(),fc=s.dom.firstChild;fc.style.width=tw;fc.rows[0].childNodes[col].style.width=w;this.updateSummaryWidth();},doAllWidths:function(ws,tw){var s=this.getSummaryNode(),fc=s.dom.firstChild,cells=fc.rows[0].childNodes,wlen=ws.length,j;fc.style.width=tw;for(j=0;j<wlen;j++){cells[j].style.width=ws[j];}
this.updateSummaryWidth();},doHidden:function(col,hidden,tw){var s=this.getSummaryNode(),fc=s.dom.firstChild,display=hidden?'none':'';fc.style.width=tw;fc.rows[0].childNodes[col].style.display=display;this.updateSummaryWidth();},getGridHeader:function(){if(!this.gridHeader){this.gridHeader=this.view.mainHd.child('.x-grid3-header-offset');}
return this.gridHeader;},updateSummaryWidth:function(){},renderSummary:function(o,cs,cm){cs=cs||this.view.getColumnData();var cfg=cm.config,buf=[],c,p={},cf,last=cs.length-1;for(var i=0,len=cs.length;i<len;i++){c=cs[i];cf=cfg[i];p.id=c.id;p.style=c.style;p.css=i==0?'x-grid3-cell-first ':(i==last?'x-grid3-cell-last ':'');if(cf.totalLabel){p.value=cf.totalLabel;}else
if(cf.summaryType||cf.summaryRenderer){p.value=(cf.summaryRenderer||c.renderer).call(c.scope,o.data[c.name],p,o);}else{p.value='';}
if(p.value==undefined||p.value===""){p.value="&#160;";}
buf[buf.length]=this.cellTpl.apply(p);}
return this.rowTpl.apply({tstyle:'width:'+this.view.getTotalWidth()+';',cells:buf.join('')});},refreshSummary:function(){var g=this.grid,ds=g.store,cs=this.view.getColumnData(),cm=g.getColumnModel(),rs=ds.getRange(),data=this.calculate(rs,cm),buf=this.renderSummary({data:data},cs,cm);if(!this.view.summaryWrap){this.view.summaryWrap=Ext.DomHelper[this.position=='bottom'?'insertAfter':'insertBefore'](this.view.scroller,{style:'overflow:auto;'+(Ext.isIE?'width:100%;overflow-y:hidden;height:'+((Ext.getScrollBarWidth?Ext.getScrollBarWidth():this.scrollBarWidth)+18)+'px;':''),tag:'div',cls:'x-grid3-gridsummary-row-inner'},true);this.view.summaryWrap.on('scroll',this.syncGridHScroll,this);}
this.setSummaryNode(this.view.summaryWrap.update(buf).first());this.updateSummaryWidth();},toggleGridHScroll:function(allowHScroll){this.view.scroller[allowHScroll===undefined?'toggleClass':allowHScroll?'removeClass':'addClass']('x-grid3-gridsummary-hide-hscroll');},toggleSummary:function(visible){var el=this.grid.getGridEl(),v=this.view;if(el){el[visible===undefined?'toggleClass':visible?'removeClass':'addClass']('x-grid-hide-gridsummary');this.toggleGridHScroll();v.layout();v.summaryWrap.dom.scrollLeft=v.scroller.dom.scrollLeft;}},getSummaryNode:function(){return this.view.summary;},setSummaryNode:function(sn){this.view.summary=sn;},beforeDestroy:function(){Ext.destroy(this.view.summary,this.view.summaryWrap);delete this.grid;delete this.view;delete this.gridHeader;delete this.oldX;delete this.oldY;}});Ext.reg('gridsummary',Ext.ux.grid.GridSummary);Ext.ux.grid.GridSummary.Calculations={sum:function(v,record,colName,data,rowIdx){return data[colName]+Ext.num(v,0);},count:function(v,record,colName,data,rowIdx){return rowIdx+1;},max:function(v,record,colName,data,rowIdx){return Math.max(Ext.num(v,0),data[colName]);},min:function(v,record,colName,data,rowIdx){return Math.min(Ext.num(v,0),data[colName]);},average:function(v,record,colName,data,rowIdx){var t=data[colName]+Ext.num(v,0),count=record.store.getCount();return rowIdx==count-1?(t/count):t;}};