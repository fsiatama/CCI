Ext.ns('Ext.ux.tree');Ext.ux.tree.RemoteTreePanel=Ext.extend(Ext.tree.TreePanel,{appendText:'Append',collapseAllText:'Collapse All',collapseText:'Collapse',contextMenu:true,deleteText:'Delete',errorText:'Error',expandAllText:'Expand All',expandText:'Expand',insertText:'Insert',newText:'New',reallyWantText:'Do you really want to',deleteInfoText:'',reloadText:'Reload',renameText:'Rename',allowLeafAppend:true,appendIconCls:'icon-arrow-down',border:false,cmdNames:{moveNode:'moveTreeNode',renameNode:'renameTreeNode',removeNode:'removeTreeNode',appendChild:'appendTreeChild',insertChild:'insertTreeChild'},collapseAllIconCls:'icon-collapse',collapseIconCls:'icon-collapse',deleteIconCls:'icon-cross',editable:true,editorConfig:{cancelOnEsc:true,completeOnEnter:true},editorFieldConfig:{allowBlank:false,selectOnFocus:true},enableDD:true,expandAllIconCls:'icon-expand',expandIconCls:'icon-expand',insertIconCls:'icon-arrow-right',layout:'fit',paramNames:{cmd:'action',id:'id',target:'target',point:'point',text:'text',newText:'newText',oldText:'oldText'},reloadIconCls:'icon-refresh',renameIconCls:'icon-pencil',initComponent:function(){var config={};if(!this.keys){config.keys=(function(){var keys=[];if(true===this.editable){keys.push({key:Ext.EventObject.DELETE,scope:this,stopEvent:true,handler:this.onKeyDelete});keys.push({key:Ext.EventObject.F2,scope:this,stopEvent:true,handler:this.onKeyEdit});}
return keys;}.call(this));}
Ext.apply(this,Ext.apply(this.initialConfig,config));Ext.ux.tree.RemoteTreePanel.superclass.initComponent.apply(this,arguments);if(true===this.loader.preloadChildren){this.loader.on({load:function(loader,node){node.cascade(function(n){loader.doPreload(n);});}});}
if(true===this.editable&&!this.editor){this.editor=new Ext.tree.TreeEditor(this,this.editorFieldConfig,this.editorConfig);this.editor.on({complete:{scope:this,fn:this.onEditComplete},beforestartedit:{scope:this,fn:function(){return this.editable;}}});}
if(true===this.editable){this.getSelectionModel().on({selectionchange:{scope:this,fn:function(selModel,node){this.selectedNode=node;}}});}
if(true===this.editable&&!this.actions){this.actions={reloadTree:new Ext.Action({text:this.reloadText,iconCls:this.reloadIconCls,scope:this,handler:function(){this.root.reload();}}),expandNode:new Ext.Action({text:this.expandText,iconCls:this.expandIconCls,scope:this,handler:this.onExpandNode}),expandAll:new Ext.Action({text:this.expandAllText,iconCls:this.expandAllIconCls,scope:this,handler:this.onExpandAll}),collapseNode:new Ext.Action({text:this.collapseText,iconCls:this.collapseIconCls,scope:this,handler:this.onCollapseNode}),collapseAll:new Ext.Action({text:this.collapseAllText,iconCls:this.collapseAllIconCls,scope:this,handler:this.onCollapseAll}),renameNode:new Ext.Action({text:this.renameText,iconCls:this.renameIconCls,scope:this,handler:this.onRenameNode}),removeNode:new Ext.Action({text:this.deleteText,iconCls:this.deleteIconCls,scope:this,handler:this.onRemoveNode}),insertChild:new Ext.Action({text:this.insertText,iconCls:this.insertIconCls,scope:this,handler:this.onInsertChild})};}
if(true===this.editable&&true===this.contextMenu){this.contextMenu=new Ext.menu.Menu({autoHeight:true,enableScrolling:false,items:[new Ext.menu.TextItem({text:'',style:'font-weight:bold;margin:0px 4px 0px 27px;line-height:18px'}),'-',this.actions.reloadTree,this.actions.expandAll,this.actions.collapseAll,'-',this.actions.expandNode,this.actions.collapseNode,'-',this.actions.renameNode,'-',this.actions.insertChild,'-',this.actions.removeNode]});}
if(this.contextMenu){this.on({contextmenu:{scope:this,fn:this.onContextMenu,stopEvent:true}});this.contextMenu.on({hide:{scope:this,fn:function(){this.actionNode=null;}},show:{scope:this,fn:function(){var node=this.actionNode;var text=Ext.util.Format.ellipsis(node?node.text:'',12);this.contextMenu.items.item(0).el.update(text);this.contextMenu.el.shadow.hide();this.contextMenu.el.shadow.show(this.contextMenu.el);}}});}
if(true===this.enableDD){this.on({beforenodedrop:{scope:this,fn:this.onBeforeNodeDrop},nodedrop:{scope:this,fn:this.onNodeDrop},nodedragover:{scope:this,fn:this.onNodeDragOver},startdrag:{scope:this,fn:this.onStartDrag}});}
this.addEvents('beforeremoverequest','beforerenamerequest','beforeappendrequest','beforeinsertrequest','beforemoverequest','appendchildsuccess','insertchildsuccess','removenodesuccess','renamenodesuccess','movenodesuccess');},initEvents:function(){Ext.ux.tree.RemoteTreePanel.superclass.initEvents.apply(this,arguments);if(true===this.enableDD){this.dragZone.onBeforeDrag=function(data,e){var n=data.node;return n&&n.draggable&&!n.disabled&&this.tree.editable;};}},actionCallback:function(options,success,response){if(options.node){options.node.getUI().afterLoad();}
if(true!==success){this.showError(response.responseText);return;}
var o;try{o=Ext.decode(response.responseText);}
catch(ex){this.showError(response.responseText);return;}
if(true!==o.success){this.showError(o.error||o.errors);switch(options.action){case'appendChild':case'insertChild':options.node.parentNode.removeChild(options.node);break;default:break;}
return;}
if(!options.action){this.showError('Developer error: no options.action');}
switch(options.action){case'renameNode':options.node.setText(options.params.newText);break;case'removeNode':options.node.parentNode.removeChild(options.node);if(options.node.leaf){this.getRootNode().reload();}
break;case'moveNode':if('append'===options.e.point){options.e.target.expand();}
this.dropZone.completeDrop(options.e);break;case'appendChild':case'insertChild':this.unregisterNode(options.node);options.node.id=o.id;Ext.fly(options.node.getUI().elNode).set({'ext:tree-node-id':o.id});this.registerNode(options.node);options.node.select();break;}
this.fireEvent(options.action.toLowerCase()+'success',this,options.node);},applyBaseParams:function(params){var o=Ext.apply({},this.baseParams||this.loader.baseParams||{});Ext.apply(o,params||{});return o;},appendChild:function(childNode,insert){var params=this.applyBaseParams();params[this.paramNames.cmd]=true===insert?this.cmdNames.insertChild:this.cmdNames.appendChild;params[this.paramNames.id]=childNode.parentNode.id;params[this.paramNames.text]=childNode.text;var o=Ext.apply(this.getOptions(),{action:true===insert?'insertChild':'appendChild',node:childNode,params:params});if(false!==this.fireEvent('before'+(insert?'insert':'append')+'request',this,o)){childNode.getUI().beforeLoad();Ext.Ajax.request(o);}},getOptions:function(){return{url:this.loader.url||this.loader.dataUrl||this.url||this.dataUrl,method:this.loader.method||this.method||'POST',scope:this,callback:this.actionCallback};},onAppendChild:function(insert){this.actionNode=this.actionNode||this.selectedNode;if(!this.actionNode){return;}
var node=this.actionNode;var child;node.leaf=false;node.expand(false,false,function(n){if(true===insert){child=n.insertBefore(this.loader.createNode({text:this.newText,loaded:true}),n.firstChild);}
else{child=n.appendChild(this.loader.createNode({text:this.newText,loaded:true}));}}.createDelegate(this));this.editor.creatingNode=true;if(true===insert){this.editor.on({complete:{scope:this,single:true,fn:this.onInsertEditComplete}});}
else{this.editor.on({complete:{scope:this,single:true,fn:this.onAppendEditCompete}});}
this.editor.triggerEdit(child);this.actionNode=null;},onAppendEditCompete:function(editor,newText,oldText){this.appendChild(editor.editNode);},onBeforeNodeDrop:function(e){this.moveNode(e);e.dropStatus=true;return false;},onContextMenu:function(node,e){var menu=this.contextMenu;if(node.browserEvent){this.getSelectionModel().clearSelections();menu.showAt(node.getXY());this.actionNode=this.getRootNode();node.stopEvent();}
else{node.select();this.actionNode=node;var alignEl=node.getUI().getEl();menu.showAt([e.getXY()[0],e.getXY()[1]]);e.stopEvent();}
var actions=this.actions;var disable=true!==this.editable||!this.actionNode;actions.renameNode.setDisabled(disable);actions.removeNode.setDisabled(disable);actions.insertChild.setDisabled(disable);},onEditComplete:function(editor,newText,oldText){if(editor.creatingNode){editor.creatingNode=false;return;}
this.renameNode(editor.editNode,newText);return false;},onExpandAll:function(){this.getRootNode().expand(true,false);},onExpandNode:function(){(this.actionNode||this.selectedNode||this.getRootNode()).expand(true,false);},onCollapseAll:function(){this.getRootNode().collapse(true,false);},onCollapseNode:function(){(this.actionNode||this.selectedNode||this.getRootNode()).collapse(true,false);},onInsertEditComplete:function(editor,newText,oldText){this.appendChild(editor.editNode,true);},onInsertChild:function(){this.onAppendChild(true);},onKeyDelete:function(key,e){this.actionNode=this.getSelectionModel().getSelectedNode();this.actions.removeNode.execute();},onKeyEdit:function(key,e){var node=this.getSelectionModel().getSelectedNode();if(node&&true===this.editable){this.actionNode=node;this.onRenameNode();}},onNodeDragOver:function(e){if(true===this.allowLeafAppend){e.target.leaf=false;}},onNodeDrop:function(e){},onRender:function(){Ext.ux.tree.RemoteTreePanel.superclass.onRender.apply(this,arguments);if(false===this.rootVisible&&this.contextMenu){this.el.on({contextmenu:{scope:this,fn:this.onContextMenu,stopEvent:true}});}},onRemoveNode:function(){this.actionNode=this.actionNode||this.selectedNode;if(!this.actionNode){return;}
var node=this.actionNode;this.removeNode(node);this.actionNode=null;},onRenameNode:function(){this.actionNode=this.actionNode||this.selectedNode;if(!this.actionNode){return;}
var node=this.actionNode;this.editor.triggerEdit(node,10);this.actionNode=null;},onStartDrag:function(){this.dragZone.proxy.ghost.addClass(this.cls||this.initialConfig.cls||'');},moveNode:function(e){var params=this.applyBaseParams();params[this.paramNames.cmd]=this.cmdNames.moveNode;params[this.paramNames.id]=e.dropNode.id;params[this.paramNames.target]=e.target.id;params[this.paramNames.point]=e.point;var o=Ext.apply(this.getOptions(),{action:'moveNode',e:e,node:e.dropNode,params:params});if(false!==this.fireEvent('beforemoverequest',this,o)){e.dropNode.getUI().beforeLoad();Ext.Ajax.request(o);}},removeNode:function(node){if(0===node.getDepth()){return;}
if(node.leaf){var msg=this.reallyWantText+' '+this.deleteText.toLowerCase()+' <b>'+node.text+'</b>?';}
else{var msg=this.reallyWantText+' '+this.deleteText.toLowerCase()+' <b>'+node.text+'</b>?<br>'+this.deleteInfoText;}
Ext.Msg.show({title:this.deleteText,msg:msg,icon:Ext.Msg.QUESTION,buttons:Ext.Msg.YESNO,scope:this,fn:function(response){if('yes'!==response){return;}
var params=this.applyBaseParams();params[this.paramNames.cmd]=this.cmdNames.removeNode;params[this.paramNames.id]=node.id;var o=Ext.apply(this.getOptions(),{action:'removeNode',node:node,params:params});if(false!==this.fireEvent('beforeremoverequest',this,o)){node.getUI().beforeLoad();Ext.Ajax.request(o);}}});},renameNode:function(node,newText){var params=this.applyBaseParams();params[this.paramNames.cmd]=this.cmdNames.renameNode;params[this.paramNames.id]=node.id;params[this.paramNames.newText]=newText;params[this.paramNames.oldText]=node.text||'';var o=Ext.apply(this.getOptions(),{action:'renameNode',node:node,params:params});if(false!==this.fireEvent('beforerenamerequest',this,o)){node.getUI().beforeLoad();Ext.Ajax.request(o);}},showError:function(msg,title){Ext.Msg.show({title:title||this.errorText,msg:msg,icon:Ext.Msg.ERROR,buttons:Ext.Msg.OK});}});Ext.reg('remotetreepanel',Ext.ux.tree.RemoteTreePanel);